Each case study includes a bugged file, a trace exercising the bug,
(possibly) its fixed version, and additional information, typically
including a reference to where the program and the bug are described
or the description itself.

Traces are in a dedicated directory including a file trace_result.log
with general information and a number of files trace_NNN.log
containing the trace of file NNN.

The file trace_result.log contains the following information:

1) executed call

call "module:function()"     e.g.    call "purchase:main()"

2) pid assigned to main process

main_pid NNN                 e.g.    main_pid 63

3) result of the main process

result VALUE                 e.g.    result false

Each file trace_NNN.log is a sequence of tuples with the following forms:

1) spawn instructions

{PID1,spawn,PID2}            e.g.    {63,spawn,70}

Process with pid PID1 spawned process with pid PID2

2) send instructions

{PID,send,MSGID}             e.g.    {70,send,2}

Process with pid PID sent message with unique message identifier MSGID.

NOTE: unique message identifiers do not exist in Erlang and are added
by our instrumentation. They allow one to link a send with the
corresponding receive and allow one to have more precise causal
information.

3) receive instructions

{PID,'receive',MSGID}        e.g.    {63,'receive',3}

Process with pid PID received message with unique message identifier
MSGID.

NOTE: unique message identifiers do not exist in Erlang and are added
by our instrumentation. They allow one to link a send with the
corresponding receive and allow one to have more precise causal
information.
